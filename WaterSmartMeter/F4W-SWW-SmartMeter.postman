{
	"info": {
		"_postman_id": "2075af94-1ed8-4f44-9e28-3934493727b8",
		"name": "F4W - SWW - Smart Meter",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Queries",
			"item": [
				{
					"name": "F4W - Retrieve all Smart Water Meter consumers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							},
							{
								"key": "Accept",
								"value": "application/ld+json"
							},
							{
								"key": "Link",
								"value": "<{{waterLink}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
							}
						],
						"url": {
							"raw": "{{gatewayServer}}/ngsi-ld/v1/entities?type=Consumer",
							"host": [
								"{{gatewayServer}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities"
							],
							"query": [
								{
									"key": "type",
									"value": "Consumer"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "F4W - Retrieve a Consumer",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							},
							{
								"key": "Accept",
								"value": "application/ld+json"
							},
							{
								"key": "Link",
								"value": "<{{waterLink}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
							}
						],
						"url": {
							"raw": "{{gatewayServer}}/ngsi-ld/v1/entities/urn:ngsi-ld:Consumer:Consumer139E643",
							"host": [
								"{{gatewayServer}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								"urn:ngsi-ld:Consumer:Consumer139E643"
							]
						}
					},
					"response": []
				},
				{
					"name": "F4W - Retrieve a Smart Meter",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							},
							{
								"key": "Accept",
								"value": "application/ld+json"
							},
							{
								"key": "Link",
								"value": "<{{waterLink}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
							}
						],
						"url": {
							"raw": "{{gatewayServer}}/ngsi-ld/v1/entities/urn:ngsi-ld:Device:WaterMeter-139E643",
							"host": [
								"{{gatewayServer}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								"urn:ngsi-ld:Device:WaterMeter-139E643"
							]
						}
					},
					"response": []
				},
				{
					"name": "F4W - Retrieve a Device model",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							},
							{
								"key": "Accept",
								"value": "application/ld+json"
							},
							{
								"key": "Link",
								"value": "<{{waterLink}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
							}
						],
						"url": {
							"raw": "{{gatewayServer}}/ngsi-ld/v1/entities/urn:ngsi-ld:DeviceModel:smartMeterModel01",
							"host": [
								"{{gatewayServer}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								"urn:ngsi-ld:DeviceModel:smartMeterModel01"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Advanced Queries",
			"item": [
				{
					"name": "F4W - All consumers with an high max flow",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							},
							{
								"key": "Accept",
								"value": "application/ld+json"
							},
							{
								"key": "Link",
								"value": "<{{waterLink}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
							}
						],
						"url": {
							"raw": "{{gatewayServer}}/ngsi-ld/v1/entities?q=maxFlow>1200&type=Consumer",
							"host": [
								"{{gatewayServer}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities"
							],
							"query": [
								{
									"key": "q",
									"value": "maxFlow>1200"
								},
								{
									"key": "type",
									"value": "Consumer"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "F4W - All consumers with an alarm in progress",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							},
							{
								"key": "Accept",
								"value": "application/ld+json"
							},
							{
								"key": "Link",
								"value": "<{{waterLink}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
							}
						],
						"url": {
							"raw": "{{gatewayServer}}/ngsi-ld/v1/entities?q=alarmInProgress==1&type=Consumer",
							"host": [
								"{{gatewayServer}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities"
							],
							"query": [
								{
									"key": "q",
									"value": "alarmInProgress==1"
								},
								{
									"key": "type",
									"value": "Consumer"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e8771fb4-bf9e-4605-816f-29a2cb352fa4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a70fc932-a840-40a0-a7c2-06bf93e79831",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Temporal Queries",
			"item": [
				{
					"name": "F4W - Temporal evolution of the max flow of a consumer",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							},
							{
								"key": "Accept",
								"value": "application/ld+json"
							},
							{
								"key": "Link",
								"value": "<{{waterLink}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
							}
						],
						"url": {
							"raw": "{{gatewayServer}}/ngsi-ld/v1/temporal/entities/urn:ngsi-ld:Consumer:Consumer139E643?timerel=after&time=2020-05-01T07:00:00Z&attrs=maxFlow&options=temporalValues",
							"host": [
								"{{gatewayServer}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"temporal",
								"entities",
								"urn:ngsi-ld:Consumer:Consumer139E643"
							],
							"query": [
								{
									"key": "timerel",
									"value": "after"
								},
								{
									"key": "time",
									"value": "2020-05-01T07:00:00Z"
								},
								{
									"key": "attrs",
									"value": "maxFlow"
								},
								{
									"key": "options",
									"value": "temporalValues"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "F4W - Temporal evolution of the properties of a consumer",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json"
							},
							{
								"key": "Accept",
								"value": "application/ld+json"
							},
							{
								"key": "Link",
								"value": "<{{waterLink}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
							}
						],
						"url": {
							"raw": "{{gatewayServer}}/ngsi-ld/v1/temporal/entities/urn:ngsi-ld:Consumer:Consumer139E643?timerel=after&time=2020-05-01T07:00:00Z",
							"host": [
								"{{gatewayServer}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"temporal",
								"entities",
								"urn:ngsi-ld:Consumer:Consumer139E643"
							],
							"query": [
								{
									"key": "timerel",
									"value": "after"
								},
								{
									"key": "time",
									"value": "2020-05-01T07:00:00Z"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "accessToken",
				"value": "{{oauthToken}}",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "23fcc808-15a2-4e13-9af1-e57d75cf0278",
				"type": "text/javascript",
				"exec": [
					"// Refresh the OAuth token if necessary",
					"var tokenDate = new Date(2010,1,1);",
					"var tokenTimestamp = pm.environment.get(\"oauthTimestamp\");",
					"if(tokenTimestamp){",
					"  tokenDate = Date.parse(tokenTimestamp);",
					"}",
					"var expiresInTime = pm.environment.get(\"expiresInTime\");",
					"if(!expiresInTime){",
					"    expiresInTime = 300000; // Set default expiration time to 5 minutes",
					"}if((new Date() - tokenDate) >= expiresInTime) ",
					"{",
					"   pm.sendRequest({",
					"      url:  pm.environment.get(\"authUrl\"), ",
					"      method: 'POST',",
					"      body: {",
					"        mode: 'urlencoded',",
					"        urlencoded: [",
					"            { key: 'client_id', value: pm.environment.get(\"clientId\") },",
					"            { key: 'client_secret', value: pm.environment.get(\"clientSecret\") },",
					"            { key: 'grant_type', value: 'client_credentials' }",
					"        ]",
					"      },",
					"      header: {",
					"        'Accept': 'application/json',",
					"        'Content-Type': 'application/x-www-form-urlencoded'",
					"      }",
					"  }, function (err, res) {",
					"        pm.environment.set(\"oauthToken\", res.json().access_token);",
					"        pm.environment.set(\"oauthTimestamp\", new Date());",
					"        ",
					"        // Set the ExpiresInTime variable to the time given in the response if it exists",
					"        if(res.json().expires_in){",
					"            expiresInTime = res.json().expires_in * 1000;",
					"            pm.environment.set(\"expiresInTime\", expiresInTime);",
					"        }",
					"  });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "99eaaa28-5a31-4d29-af7f-11b89d673077",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}